{
    "swagger": "2.0",
    "info": {
        "title": "BBQueue",
        "description": "A simple queue service",
        "version": "1.0.0"
    },
    "host": "127.0.0.1:8080",
    "basePath": "/",
    "paths": {
        "/queue": {
            "get": {
                "summary": "Get the first message in the queue",
                "description": "Returns the first message in the front of the queue, including the timeout the message can stay in processing in seconds.",
                "parameters": [
                    {
                        "name": "Timeout-Key",
                        "in": "header",
                        "description": "Timeout in seconds",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "204": {
                        "description": "Queue is empty"
                    }
                }
            },
            "post": {
                "summary": "Add a message to the queue",
                "description": "Adds the message contained on the body of the request to the end of the queue.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "message",
                        "in": "body",
                        "description": "Message to add to the queue",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message added successfully"
                    },
                    "500": {
                        "description": "Failed to read request body"
                    }
                }
            }
        },
        "/queue/{key}": {
            "get": {
                "summary": "Get a specific message",
                "description": "Gets the message with the same key as the one on the requested URL.",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key of the message to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Key not found"
                    },
                    "204": {
                        "description": "Queue is empty"
                    }
                }
            },
            "delete": {
                "summary": "Delete a specific message",
                "description": "Deletes a message with the same key as the one passed on the requested URL",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key of the message to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message deleted successfully"
                    },
                    "404": {
                        "description": "Key not found"
                    },
                    "500": {
                        "description": "Error deleting message"
                    }
                }
            }
        }
    },
    "definitions": {
        "Message": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                }
            }
        }
    }
}
