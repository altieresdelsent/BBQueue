{
    "swagger": "2.0",
    "info": {
        "description": "A simple queue service",
        "title": "BBQueue API",
        "contact": {},
        "version": "1.0"
    },
    "host": "127.0.0.1:8080",
    "basePath": "/",
    "paths": {
        "/processing/{key}": {
            "get": {
                "description": "Gets the message from the in-processing with the same key as the one passed on the requested URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Get a specific message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key of the message to return",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "204": {
                        "description": "Queue is empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Key not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a message with the same key as the one passed on the requested URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Delete a specific message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key of the message to delete",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "204": {
                        "description": "Key not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Key is not in UUID format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error deleting message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queue": {
            "get": {
                "description": "Returns the first message in the front of the queue, including the timeout the message can stay in processing in seconds.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Get the first message in the queue",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Timeout in seconds",
                        "name": "Timeout-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "204": {
                        "description": "Queue is empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds the message contained on the body of the request to the end of the queue.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Add a message to the queue",
                "parameters": [
                    {
                        "description": "Message to add to the queue",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to read request body",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}